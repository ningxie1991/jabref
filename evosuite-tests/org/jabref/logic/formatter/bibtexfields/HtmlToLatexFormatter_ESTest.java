/*
 * This file was automatically generated by EvoSuite
 * Sat May 29 14:33:28 GMT 2021
 */

package org.jabref.logic.formatter.bibtexfields;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jabref.logic.formatter.bibtexfields.HtmlToLatexFormatter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HtmlToLatexFormatter_ESTest extends HtmlToLatexFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HtmlToLatexFormatter htmlToLatexFormatter0 = new HtmlToLatexFormatter();
      // Undeclared exception!
      try { 
        htmlToLatexFormatter0.format("&#C39;");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"C39\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HtmlToLatexFormatter htmlToLatexFormatter0 = new HtmlToLatexFormatter();
      // Undeclared exception!
      try { 
        htmlToLatexFormatter0.format((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HtmlToLatexFormatter htmlToLatexFormatter0 = new HtmlToLatexFormatter();
      String string0 = htmlToLatexFormatter0.format("2]#/FT'+}EIk<\"c/j");
      assertEquals("2]#/FT'+}EIk\"c/j", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HtmlToLatexFormatter htmlToLatexFormatter0 = new HtmlToLatexFormatter();
      String string0 = htmlToLatexFormatter0.format("h`X)2T;-a&YQlexU0;&");
      assertEquals("h`X)2T;-a&YQlexU0;&", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HtmlToLatexFormatter htmlToLatexFormatter0 = new HtmlToLatexFormatter();
      String string0 = htmlToLatexFormatter0.format("&#39;");
      assertEquals("'", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HtmlToLatexFormatter htmlToLatexFormatter0 = new HtmlToLatexFormatter();
      String string0 = htmlToLatexFormatter0.format("<strong>JabRef</strong>");
      assertEquals("JabRef", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HtmlToLatexFormatter htmlToLatexFormatter0 = new HtmlToLatexFormatter();
      String string0 = htmlToLatexFormatter0.format("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HtmlToLatexFormatter htmlToLatexFormatter0 = new HtmlToLatexFormatter();
      String string0 = htmlToLatexFormatter0.getExampleInput();
      assertEquals("<strong>JabRef</strong>", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HtmlToLatexFormatter htmlToLatexFormatter0 = new HtmlToLatexFormatter();
      String string0 = htmlToLatexFormatter0.getName();
      assertEquals("HTML to LaTeX", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HtmlToLatexFormatter htmlToLatexFormatter0 = new HtmlToLatexFormatter();
      String string0 = htmlToLatexFormatter0.getKey();
      assertEquals("html_to_latex", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HtmlToLatexFormatter htmlToLatexFormatter0 = new HtmlToLatexFormatter();
      String string0 = htmlToLatexFormatter0.getDescription();
      assertEquals("Converts HTML code to LaTeX code.", string0);
  }
}
